<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsjg.core.dao.BookUserdefinedMapper">
  <resultMap id="BaseResultMap" type="com.tsjg.core.bean.BookUserdefined">
    <id column="book_userdefined_id" jdbcType="INTEGER" property="bookUserdefinedId" />
    <result column="book_ud_name" jdbcType="VARCHAR" property="bookUdName" />
    <result column="book_ud_author" jdbcType="VARCHAR" property="bookUdAuthor" />
    <result column="book_ud_publish" jdbcType="VARCHAR" property="bookUdPublish" />
    <result column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="book_ud_pubtime" jdbcType="TIMESTAMP" property="bookUdPubtime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="book_jg_time" jdbcType="TIMESTAMP" property="bookJgTime" />
    <result column="isget" jdbcType="INTEGER" property="isget" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_userdefined_id, book_ud_name, book_ud_author, book_ud_publish, isbn, book_ud_pubtime, 
    user_id, book_jg_time, isget
  </sql>
  <select id="selectByExample" parameterType="com.tsjg.core.bean.BookUserdefinedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_userdefined
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- ************************************ -->
  <sql id="Limit">
 	LIMIT #{startRow},#{pageSize}
  </sql>
  <sql id="OrderBy">
  	ORDER BY book_jg_time desc
  </sql>
  
  <select id="findUserBookJgCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	SELECT COUNT(*)  
	FROM book_userdefined 
	WHERE user_id = #{userId}
  </select>
  <select id="findUserBookJg" parameterType="com.tsjg.core.bean.BookUserdefined" resultMap="BaseResultMap">
  	SELECT * 
	FROM book_userdefined 
	WHERE user_id = #{userId}
	<include refid="OrderBy"></include>
	<include refid="Limit"></include>
  </select>
  <!-- ************************************ -->
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_userdefined
    where book_userdefined_id = #{bookUserdefinedId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_userdefined
    where book_userdefined_id = #{bookUserdefinedId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tsjg.core.bean.BookUserdefinedExample">
    delete from book_userdefined
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tsjg.core.bean.BookUserdefined">
    insert into book_userdefined (book_userdefined_id, book_ud_name, book_ud_author, 
      book_ud_publish, isbn, book_ud_pubtime, 
      user_id, book_jg_time, isget
      )
    values (#{bookUserdefinedId,jdbcType=INTEGER}, #{bookUdName,jdbcType=VARCHAR}, #{bookUdAuthor,jdbcType=VARCHAR}, 
      #{bookUdPublish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{bookUdPubtime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{bookJgTime,jdbcType=TIMESTAMP}, #{isget,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tsjg.core.bean.BookUserdefined">
    insert into book_userdefined
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookUserdefinedId != null">
        book_userdefined_id,
      </if>
      <if test="bookUdName != null">
        book_ud_name,
      </if>
      <if test="bookUdAuthor != null">
        book_ud_author,
      </if>
      <if test="bookUdPublish != null">
        book_ud_publish,
      </if>
      <if test="isbn != null">
        isbn,
      </if>
      <if test="bookUdPubtime != null">
        book_ud_pubtime,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bookJgTime != null">
        book_jg_time,
      </if>
      <if test="isget != null">
        isget,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookUserdefinedId != null">
        #{bookUserdefinedId,jdbcType=INTEGER},
      </if>
      <if test="bookUdName != null">
        #{bookUdName,jdbcType=VARCHAR},
      </if>
      <if test="bookUdAuthor != null">
        #{bookUdAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookUdPublish != null">
        #{bookUdPublish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="bookUdPubtime != null">
        #{bookUdPubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookJgTime != null">
        #{bookJgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isget != null">
        #{isget,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tsjg.core.bean.BookUserdefinedExample" resultType="java.lang.Long">
    select count(*) from book_userdefined
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_userdefined
    <set>
      <if test="record.bookUserdefinedId != null">
        book_userdefined_id = #{record.bookUserdefinedId,jdbcType=INTEGER},
      </if>
      <if test="record.bookUdName != null">
        book_ud_name = #{record.bookUdName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookUdAuthor != null">
        book_ud_author = #{record.bookUdAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.bookUdPublish != null">
        book_ud_publish = #{record.bookUdPublish,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null">
        isbn = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.bookUdPubtime != null">
        book_ud_pubtime = #{record.bookUdPubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bookJgTime != null">
        book_jg_time = #{record.bookJgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isget != null">
        isget = #{record.isget,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_userdefined
    set book_userdefined_id = #{record.bookUserdefinedId,jdbcType=INTEGER},
      book_ud_name = #{record.bookUdName,jdbcType=VARCHAR},
      book_ud_author = #{record.bookUdAuthor,jdbcType=VARCHAR},
      book_ud_publish = #{record.bookUdPublish,jdbcType=VARCHAR},
      isbn = #{record.isbn,jdbcType=VARCHAR},
      book_ud_pubtime = #{record.bookUdPubtime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      book_jg_time = #{record.bookJgTime,jdbcType=TIMESTAMP},
      isget = #{record.isget,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsjg.core.bean.BookUserdefined">
    update book_userdefined
    <set>
      <if test="bookUdName != null">
        book_ud_name = #{bookUdName,jdbcType=VARCHAR},
      </if>
      <if test="bookUdAuthor != null">
        book_ud_author = #{bookUdAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookUdPublish != null">
        book_ud_publish = #{bookUdPublish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="bookUdPubtime != null">
        book_ud_pubtime = #{bookUdPubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookJgTime != null">
        book_jg_time = #{bookJgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isget != null">
        isget = #{isget,jdbcType=INTEGER},
      </if>
    </set>
    where book_userdefined_id = #{bookUserdefinedId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsjg.core.bean.BookUserdefined">
    update book_userdefined
    set book_ud_name = #{bookUdName,jdbcType=VARCHAR},
      book_ud_author = #{bookUdAuthor,jdbcType=VARCHAR},
      book_ud_publish = #{bookUdPublish,jdbcType=VARCHAR},
      isbn = #{isbn,jdbcType=VARCHAR},
      book_ud_pubtime = #{bookUdPubtime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      book_jg_time = #{bookJgTime,jdbcType=TIMESTAMP},
      isget = #{isget,jdbcType=INTEGER}
    where book_userdefined_id = #{bookUserdefinedId,jdbcType=INTEGER}
  </update>
</mapper>