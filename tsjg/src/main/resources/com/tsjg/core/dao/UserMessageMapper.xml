<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsjg.core.dao.UserMessageMapper">
  <resultMap id="BaseResultMap" type="com.tsjg.core.bean.UserMessage">
    <id column="user_message_id" jdbcType="INTEGER" property="userMessageId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="message_id" jdbcType="VARCHAR" property="messageId" />
    <result column="isRead" jdbcType="INTEGER" property="isread" />
    
    <association property="message" javaType="message">
    	<id column="msg_id" jdbcType="VARCHAR" property="msgId" />
    	<result column="msg_content" jdbcType="VARCHAR" property="msgContent" />
   	 	<result column="msg_time" jdbcType="TIMESTAMP" property="msgTime" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_message_id, user_id, message_id, isRead
  </sql>
  
  <!-- 一次插入多条记录 -->
  <insert id="insertPatch" parameterType="com.tsjg.core.bean.UserMessage">
  	INSERT INTO user_message (user_id,message_id)
  	VALUE(#{userId},#{messageId})
  </insert>
  
  <!-- 统计该用户未读isRead=0系统消息 -->
  <select id="findCountMsg" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	SELECT COUNT(*) FROM user_message WHERE user_id = #{userId} AND isRead = 0
  </select>
  
  <!-- 查询该用户所有系统消息 -->
  <select id="findUserAllMsg" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	SELECT * FROM user_message,message 
  	WHERE user_message.`message_id`=message.`msg_id` 
  	AND user_message.user_id = #{userId}
  	ORDER BY message.`msg_time` DESC
  </select>
  
  <select id="selectByExample" parameterType="com.tsjg.core.bean.UserMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_message
    where user_message_id = #{userMessageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_message
    where user_message_id = #{userMessageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tsjg.core.bean.UserMessageExample">
    delete from user_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tsjg.core.bean.UserMessage">
    insert into user_message (user_message_id, user_id, message_id, 
      isRead)
    values (#{userMessageId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{messageId,jdbcType=VARCHAR}, 
      #{isread,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tsjg.core.bean.UserMessage">
    insert into user_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userMessageId != null">
        user_message_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="isread != null">
        isRead,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userMessageId != null">
        #{userMessageId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="isread != null">
        #{isread,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tsjg.core.bean.UserMessageExample" resultType="java.lang.Long">
    select count(*) from user_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_message
    <set>
      <if test="record.userMessageId != null">
        user_message_id = #{record.userMessageId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=VARCHAR},
      </if>
      <if test="record.isread != null">
        isRead = #{record.isread,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_message
    set user_message_id = #{record.userMessageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      message_id = #{record.messageId,jdbcType=VARCHAR},
      isRead = #{record.isread,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsjg.core.bean.UserMessage">
    update user_message
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="isread != null">
        isRead = #{isread,jdbcType=INTEGER},
      </if>
    </set>
    where user_message_id = #{userMessageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsjg.core.bean.UserMessage">
    update user_message
    set user_id = #{userId,jdbcType=INTEGER},
      message_id = #{messageId,jdbcType=VARCHAR},
      isRead = #{isread,jdbcType=INTEGER}
    where user_message_id = #{userMessageId,jdbcType=INTEGER}
  </update>
</mapper>