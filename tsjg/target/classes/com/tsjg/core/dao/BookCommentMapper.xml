<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsjg.core.dao.BookCommentMapper">
  <resultMap id="BaseResultMap" type="com.tsjg.core.bean.BookComment">
    <id column="bc_id" jdbcType="INTEGER" property="bcId" />
    <result column="bc_content" jdbcType="VARCHAR" property="bcContent" />
    <result column="bc_time" jdbcType="TIMESTAMP" property="bcTime" />
    <result column="bc_nouse" jdbcType="INTEGER" property="bcNouse" />
    <result column="bc_beuse" jdbcType="INTEGER" property="bcBeuse" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bc_id, bc_content, bc_time, bc_nouse, bc_beuse, book_id, user_id
  </sql>
  
  <!-- ********************************** -->
  
  <select id="findBookComment" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	SELECT book_comment.*,user.user_id,user.username
	FROM book_comment,USER
	WHERE book_comment.user_id = user.user_id
	AND book_comment.book_id = #{bookId}
  </select>
  
  <!-- ********************************** -->
  
  <select id="selectByExample" parameterType="com.tsjg.core.bean.BookCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_comment
    where bc_id = #{bcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_comment
    where bc_id = #{bcId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tsjg.core.bean.BookCommentExample">
    delete from book_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tsjg.core.bean.BookComment">
    insert into book_comment (bc_id, bc_content, bc_time, 
      bc_nouse, bc_beuse, book_id, 
      user_id)
    values (#{bcId,jdbcType=INTEGER}, #{bcContent,jdbcType=VARCHAR}, #{bcTime,jdbcType=TIMESTAMP}, 
      #{bcNouse,jdbcType=INTEGER}, #{bcBeuse,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tsjg.core.bean.BookComment">
    insert into book_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bcId != null">
        bc_id,
      </if>
      <if test="bcContent != null">
        bc_content,
      </if>
      <if test="bcTime != null">
        bc_time,
      </if>
      <if test="bcNouse != null">
        bc_nouse,
      </if>
      <if test="bcBeuse != null">
        bc_beuse,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bcId != null">
        #{bcId,jdbcType=INTEGER},
      </if>
      <if test="bcContent != null">
        #{bcContent,jdbcType=VARCHAR},
      </if>
      <if test="bcTime != null">
        #{bcTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bcNouse != null">
        #{bcNouse,jdbcType=INTEGER},
      </if>
      <if test="bcBeuse != null">
        #{bcBeuse,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tsjg.core.bean.BookCommentExample" resultType="java.lang.Long">
    select count(*) from book_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_comment
    <set>
      <if test="record.bcId != null">
        bc_id = #{record.bcId,jdbcType=INTEGER},
      </if>
      <if test="record.bcContent != null">
        bc_content = #{record.bcContent,jdbcType=VARCHAR},
      </if>
      <if test="record.bcTime != null">
        bc_time = #{record.bcTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bcNouse != null">
        bc_nouse = #{record.bcNouse,jdbcType=INTEGER},
      </if>
      <if test="record.bcBeuse != null">
        bc_beuse = #{record.bcBeuse,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_comment
    set bc_id = #{record.bcId,jdbcType=INTEGER},
      bc_content = #{record.bcContent,jdbcType=VARCHAR},
      bc_time = #{record.bcTime,jdbcType=TIMESTAMP},
      bc_nouse = #{record.bcNouse,jdbcType=INTEGER},
      bc_beuse = #{record.bcBeuse,jdbcType=INTEGER},
      book_id = #{record.bookId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsjg.core.bean.BookComment">
    update book_comment
    <set>
      <if test="bcContent != null">
        bc_content = #{bcContent,jdbcType=VARCHAR},
      </if>
      <if test="bcTime != null">
        bc_time = #{bcTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bcNouse != null">
        bc_nouse = #{bcNouse,jdbcType=INTEGER},
      </if>
      <if test="bcBeuse != null">
        bc_beuse = #{bcBeuse,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where bc_id = #{bcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsjg.core.bean.BookComment">
    update book_comment
    set bc_content = #{bcContent,jdbcType=VARCHAR},
      bc_time = #{bcTime,jdbcType=TIMESTAMP},
      bc_nouse = #{bcNouse,jdbcType=INTEGER},
      bc_beuse = #{bcBeuse,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where bc_id = #{bcId,jdbcType=INTEGER}
  </update>
</mapper>